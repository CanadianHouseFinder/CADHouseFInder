doctype html
html
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1")
    title Canadian House Finder
    style.
      /* Base */
      body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0; padding: 0;
        background: #f4f4f4; color: #333;
      }
      h1 {
        text-align: center;
        margin: 1rem 0;
      }
      /* Controls */
      .controls {
        display: flex; flex-wrap: wrap; justify-content: center; gap: 1rem;
        margin-bottom: 1.5rem; padding: 0 1rem;
      }
      .controls label {
        display: flex; flex-direction: column; font-size: 0.9rem;
      }
      .controls input,
      .controls select,
      .controls button {
        padding: 0.4rem 0.6rem; font-size: 1rem;
        border: 1px solid #ccc; border-radius: 4px;
        margin-top: 0.3rem;
      }
      .controls button {
        background: #007bff; color: white; border: none;
        cursor: pointer;
      }
      .controls button:hover {
        background: #0056b3;
      }
      /* Table */
      .table-container {
        width: 95%; max-width: 1200px;
        margin: auto; overflow-x: auto;
      }
      table.property-table {
        width: 100%; border-collapse: collapse;
        margin-bottom: 2rem; display: none;
      }
      th, td {
        border: 1px solid #ddd; padding: 0.75rem;
        text-align: left;
      }
      th {
        background: #007bff; color: white;
        position: sticky; top: 0;
      }
      tr:nth-child(even) {
        background: #fafafa;
      }
      .preview-btn {
        background: #28a745; border: none; color: white;
        padding: 0.4rem 0.8rem; border-radius: 4px;
        cursor: pointer;
      }
      .preview-btn:hover {
        background: #1e7e34;
      }
      /* Modal overlay */
      .modal-overlay {
        display: none; position: fixed;
        top: 0; left: 0; width: 100vw; height: 100vh;
        background: rgba(0,0,0,0.7);
        align-items: center; justify-content: center;
        z-index: 1000;
      }
      .modal-content {
        position: relative; width: 90%; max-width: 1000px;
        height: 80%; background: white;
        border-radius: 6px; overflow: hidden;
        display: flex; flex-direction: column;
      }
      .modal-content iframe {
        flex: 1; border: none;
      }
      .close-btn {
        position: absolute; top: 0.5rem; right: 0.5rem;
        background: #dc3545; color: white;
        border: none; border-radius: 50%;
        width: 2rem; height: 2rem;
        font-size: 1.2rem; line-height: 1.8rem;
        text-align: center; cursor: pointer;
      }
      .close-btn:hover {
        background: #c82333;
      }
      /* Responsive */
      @media (max-width: 600px) {
        .controls {
          flex-direction: column; align-items: center;
        }
        .controls input,
        .controls select,
        .controls button {
          width: 90%;
        }
        th, td {
          padding: 0.5rem;
        }
      }

  body
    h1 Canadian House Finder

    //- Filter controls
    .controls
      label
        | Min Price
        input#priceMin(type="number", min="0", step="10000", value=filters.priceMin)
      label
        | Max Price
        input#priceMax(type="number", min="0", step="10000", value=filters.priceMax)
      label
        | Min Beds
        input#bedsMin(type="number", min="0", step="1", value=filters.bedsMin)
      label
        | Max Beds
        input#bedsMax(type="number", min="0", step="1", value=filters.bedsMax)
      label
        | Baths (Index)
        input#bathsIndex(type="number", min="0", step="1", value=filters.bathsIndex)
      label
        | Min SqFt
        input#sqftMin(type="number", min="0", step="100", value=filters.sqftMin)
      label
        | Max SqFt
        input#sqftMax(type="number", min="0", step="100", value=filters.sqftMax)
      label
        | House Only?
        select#house
          option(value="true",  selected=filters.house==='true')  Yes
          option(value="false", selected=filters.house==='false') No
      label
        | Region
        select#regionSelect
          option(value="") -- all regions --
          each listings, region in data
            option(value=region)= region
      button#refreshBtn(type="button") Grab Latest Houses

    //- Table container
    .table-container
      each listings, region in data
        - var slug = region.toLowerCase().replace(/[^\w]+/g, '-')
        table.property-table(id='table-'+slug)
          thead
            tr
              th URL
              th Price
              th Beds
              th Baths
              th Address
              th Preview
          tbody
            each item, idx in listings
              tr
                td
                  a(href=item.URL, target="_blank")= item.URL
                td= item.Price
                td= item.Beds
                td= item.Baths
                td= item.Address
                td
                  button.preview-btn(
                    type="button",
                    data-modal='modal-'+slug+'-'+idx
                  ) Preview
                  .modal-overlay(id='modal-'+slug+'-'+idx)
                    .modal-content
                      button.close-btn(
                        type="button",
                        data-modal='modal-'+slug+'-'+idx
                      ) ×
                      //- Lazy-loaded iframe: no src here
                      iframe(data-src=item.URL)

    //- Defer script to speed mobile load
    script(defer).
      document.addEventListener('DOMContentLoaded', () => {
        const regionSelect = document.getElementById('regionSelect');
        const refreshBtn   = document.getElementById('refreshBtn');

        // Show/hide the table
        regionSelect.addEventListener('change', () => {
          document.querySelectorAll('table.property-table')
            .forEach(t => t.style.display = 'none');
          const sel = regionSelect.value
            .toLowerCase()
            .replace(/[^\w]+/g, '-');
          const tbl = document.getElementById('table-'+sel);
          if (tbl) tbl.style.display = 'table';
        });

        // Open/close modal & lazy-load iframe
        document.body.addEventListener('click', e => {
          const modalId = e.target.dataset.modal;
          if (!modalId) return;
          const overlay = document.getElementById(modalId);
          if (!overlay) return;
          // load src on first open
          const iframe = overlay.querySelector('iframe');
          if (iframe && !iframe.src) {
            iframe.src = iframe.dataset.src;
            overlay.style.display = 'flex';
          } else {
            overlay.style.display = overlay.style.display === 'flex'
              ? 'none'
              : 'flex';
          }
        });

        // Refresh with current filters
        refreshBtn.addEventListener('click', async () => {
          const filters = {
            priceMin:   document.getElementById('priceMin').value,
            priceMax:   document.getElementById('priceMax').value,
            bedsMin:    document.getElementById('bedsMin').value,
            bedsMax:    document.getElementById('bedsMax').value,
            bathsIndex: document.getElementById('bathsIndex').value,
            sqftMin:    document.getElementById('sqftMin').value,
            sqftMax:    document.getElementById('sqftMax').value,
            house:      document.getElementById('house').value
          };

          refreshBtn.disabled   = true;
          refreshBtn.textContent = 'Fetching…';
          try {
            const resp = await fetch('/refresh', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ filters })
            });
            if (!resp.ok) throw new Error(resp.statusText);
            window.location.reload();
          } catch (err) {
            console.error(err);
            alert('Failed to update listings.');
            refreshBtn.disabled   = false;
            refreshBtn.textContent = 'Grab Latest Houses';
          }
        });
      });